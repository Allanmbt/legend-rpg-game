{"ast":null,"code":"import React from'react';import'./BattleArea.css';import{useGame}from'../../contexts/GameContext';// ËßíËâ≤ÁªÑ‰ª∂\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Character=_ref=>{let{character,emoji,isPlayer,isAttacking,isDamaged}=_ref;const healthPercent=character.currentHealth/character.maxHealth*100;return/*#__PURE__*/_jsxs(\"div\",{className:`character-container ${isPlayer?'player':'monster'}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"character-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"character-name\",children:character.name}),character.level&&/*#__PURE__*/_jsxs(\"div\",{className:\"character-level\",children:[\"Lv.\",character.level]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"health-bar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"health-bar-fill\",style:{width:`${healthPercent}%`,backgroundColor:healthPercent<30?'#ff4d4d':'#4CAF50'}}),/*#__PURE__*/_jsxs(\"div\",{className:\"health-text\",children:[character.currentHealth,\" / \",character.maxHealth]})]}),/*#__PURE__*/_jsx(\"div\",{className:`character ${isAttacking?'attacking':''} ${isDamaged?'damaged':''}`,children:emoji||(isPlayer?'üòé':'üëπ')})]});};// ÊàòÊñóÂå∫Âüü‰∏ªÁªÑ‰ª∂\nconst BattleArea=()=>{const{state,dispatch}=useGame();const{player,monster,playerAttacking,monsterAttacking,playerDamaged,monsterDamaged,selectedBattlefield,gameRunning}=state;// ËøîÂõûÈÄâÊã©È°µÈù¢\nconst handleReturnToSelect=()=>{dispatch({type:'RETURN_TO_SELECT'});};// ÊöÇÂÅú/ÁªßÁª≠Ê∏∏Êàè\nconst toggleGameRunning=()=>{dispatch({type:'TOGGLE_GAME'});};// ËÆæÁΩÆËÉåÊôØËâ≤\nconst battlefieldStyle={backgroundColor:(selectedBattlefield===null||selectedBattlefield===void 0?void 0:selectedBattlefield.background)||'#e6f7ff'};return/*#__PURE__*/_jsxs(\"div\",{className:\"battle-area\",style:battlefieldStyle,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"battlefield-info\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"return-button\",onClick:handleReturnToSelect,children:\"\\u2190 \\u8FD4\\u56DE\"}),/*#__PURE__*/_jsx(\"div\",{className:\"battlefield-name\",children:(selectedBattlefield===null||selectedBattlefield===void 0?void 0:selectedBattlefield.name)||'ÊàòÂú∫'}),/*#__PURE__*/_jsx(\"button\",{className:\"toggle-button\",onClick:toggleGameRunning,children:gameRunning?'‚è∏Ô∏è ÊöÇÂÅú':'‚ñ∂Ô∏è ÁªßÁª≠'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"experience-display\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"exp-bar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"exp-fill\",style:{width:`${player.experience/player.expToNextLevel*100}%`}}),/*#__PURE__*/_jsxs(\"div\",{className:\"exp-text\",children:[\"Lv.\",player.level,\" - \\u7ECF\\u9A8C: \",player.experience,\"/\",player.expToNextLevel]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"battle-characters\",children:[/*#__PURE__*/_jsx(Character,{character:player,isPlayer:true,isAttacking:playerAttacking,isDamaged:playerDamaged}),/*#__PURE__*/_jsx(\"div\",{className:\"battle-vs\",children:\"VS\"}),monster&&/*#__PURE__*/_jsx(Character,{character:monster,emoji:monster.emoji,isPlayer:false,isAttacking:monsterAttacking,isDamaged:monsterDamaged})]})]});};export default BattleArea;","map":{"version":3,"names":["React","useGame","jsx","_jsx","jsxs","_jsxs","Character","_ref","character","emoji","isPlayer","isAttacking","isDamaged","healthPercent","currentHealth","maxHealth","className","children","name","level","style","width","backgroundColor","BattleArea","state","dispatch","player","monster","playerAttacking","monsterAttacking","playerDamaged","monsterDamaged","selectedBattlefield","gameRunning","handleReturnToSelect","type","toggleGameRunning","battlefieldStyle","background","onClick","experience","expToNextLevel"],"sources":["D:/mm-rpg-react/src/components/BattleArea/BattleArea.jsx"],"sourcesContent":["import React from 'react';\r\nimport './BattleArea.css';\r\nimport { useGame } from '../../contexts/GameContext';\r\n\r\n// ËßíËâ≤ÁªÑ‰ª∂\r\nconst Character = ({ character, emoji, isPlayer, isAttacking, isDamaged }) => {\r\n    const healthPercent = (character.currentHealth / character.maxHealth) * 100;\r\n\r\n    return (\r\n        <div className={`character-container ${isPlayer ? 'player' : 'monster'}`}>\r\n            <div className=\"character-info\">\r\n                <div className=\"character-name\">{character.name}</div>\r\n                {character.level && <div className=\"character-level\">Lv.{character.level}</div>}\r\n            </div>\r\n\r\n            <div className=\"health-bar\">\r\n                <div\r\n                    className=\"health-bar-fill\"\r\n                    style={{\r\n                        width: `${healthPercent}%`,\r\n                        backgroundColor: healthPercent < 30 ? '#ff4d4d' : '#4CAF50'\r\n                    }}\r\n                ></div>\r\n                <div className=\"health-text\">{character.currentHealth} / {character.maxHealth}</div>\r\n            </div>\r\n\r\n            <div\r\n                className={`character ${isAttacking ? 'attacking' : ''} ${isDamaged ? 'damaged' : ''}`}\r\n            >\r\n                {emoji || (isPlayer ? 'üòé' : 'üëπ')}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// ÊàòÊñóÂå∫Âüü‰∏ªÁªÑ‰ª∂\r\nconst BattleArea = () => {\r\n    const { state, dispatch } = useGame();\r\n    const {\r\n        player,\r\n        monster,\r\n        playerAttacking,\r\n        monsterAttacking,\r\n        playerDamaged,\r\n        monsterDamaged,\r\n        selectedBattlefield,\r\n        gameRunning\r\n    } = state;\r\n\r\n    // ËøîÂõûÈÄâÊã©È°µÈù¢\r\n    const handleReturnToSelect = () => {\r\n        dispatch({ type: 'RETURN_TO_SELECT' });\r\n    };\r\n\r\n    // ÊöÇÂÅú/ÁªßÁª≠Ê∏∏Êàè\r\n    const toggleGameRunning = () => {\r\n        dispatch({ type: 'TOGGLE_GAME' });\r\n    };\r\n\r\n    // ËÆæÁΩÆËÉåÊôØËâ≤\r\n    const battlefieldStyle = {\r\n        backgroundColor: selectedBattlefield?.background || '#e6f7ff'\r\n    };\r\n\r\n    return (\r\n        <div className=\"battle-area\" style={battlefieldStyle}>\r\n            {/* ÊàòÂú∫‰ø°ÊÅØ */}\r\n            <div className=\"battlefield-info\">\r\n                <button className=\"return-button\" onClick={handleReturnToSelect}>\r\n                    ‚Üê ËøîÂõû\r\n                </button>\r\n                <div className=\"battlefield-name\">{selectedBattlefield?.name || 'ÊàòÂú∫'}</div>\r\n                <button className=\"toggle-button\" onClick={toggleGameRunning}>\r\n                    {gameRunning ? '‚è∏Ô∏è ÊöÇÂÅú' : '‚ñ∂Ô∏è ÁªßÁª≠'}\r\n                </button>\r\n            </div>\r\n\r\n            {/* ÁªèÈ™åÊù° */}\r\n            <div className=\"experience-display\">\r\n                <div className=\"exp-bar\">\r\n                    <div\r\n                        className=\"exp-fill\"\r\n                        style={{ width: `${(player.experience / player.expToNextLevel) * 100}%` }}\r\n                    ></div>\r\n                    <div className=\"exp-text\">\r\n                        Lv.{player.level} - ÁªèÈ™å: {player.experience}/{player.expToNextLevel}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* ÊàòÊñóÂå∫Âüü */}\r\n            <div className=\"battle-characters\">\r\n                <Character\r\n                    character={player}\r\n                    isPlayer={true}\r\n                    isAttacking={playerAttacking}\r\n                    isDamaged={playerDamaged}\r\n                />\r\n\r\n                <div className=\"battle-vs\">VS</div>\r\n\r\n                {monster && (\r\n                    <Character\r\n                        character={monster}\r\n                        emoji={monster.emoji}\r\n                        isPlayer={false}\r\n                        isAttacking={monsterAttacking}\r\n                        isDamaged={monsterDamaged}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BattleArea;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}